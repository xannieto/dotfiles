# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables

    # Logo key. Use Mod1 for Alt.
    set $mod Mod4
    
    # Home row direction keys, like vim
    set $left h
    set $down j
    set $up k
    set $right l
    
    # Your preferred terminal emulator
    set $term footclient 

    # Your preferred application launcher
    # Note: pass the final command to swaymsg so that the resulting window can be opened
    #       on the original workspace that the command was run on.
    exec /usr/bin/python3 /usr/bin/ulauncher --hide-window 1 > ~/.logs/ulauncher.log 2>&1
    set $menu ulauncher-toggle
    
    #set $menu wofi --show run 
    set $wallpaper ~/.config/sway/background
    #set $lock gtklock -d -s $HOME/.config/gtklock/style.css
    set $lock swaylock -f -i $wallpaper -s fill --indicator-radius 80

    # Enable xwayland
    xwayland enable
    exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
    exec hash dbus-update-activation-environment 2>/dev/null && \
       dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
    exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

### Output configuration
    #output * bg $wallpaper fill
    output HDMI-A-1 resolution 1920x1080 position 0,0
   
    # family font
    font pango: DejaVu Sans Mono 10 
    # You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
    exec --no-startup-id swayidle -w \
                    timeout 600 '$lock' \
                    timeout 1200 'swaymsg "output * dpms off" && systemctl suspend' resume 'swaymsg "output * dpms on"' \
                    before-sleep '$lock'

#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

    input type:keyboard {
        xkb_layout es
        #xkb_capslock enabled
        xkb_numlock enabled
    }

    input type:touchpad {
		middle_emulation enabled
		dwt enabled
		tap enabled
		natural_scroll enabled
    }

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload
	
 	# Lock screen
	bindsym $mod+Shift+x exec $lock

	# Logout
	bindsym $mod+x exec wlogout -p layer-shell -c 10 -r 10

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    
	# Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    
    # Set variables
    set $ws1 "1"
    set $ws2 "2"
    set $ws3 "3"
    set $ws4 "4"
    set $ws5 "5"
    set $ws6 "6"
    set $ws7 "7"
    set $ws8 "8"
    set $ws9 "9"
    set $ws10 "10"

    # Switch to workspace
    bindsym $mod+1 workspace number $ws1
    bindsym $mod+2 workspace number $ws2
    bindsym $mod+3 workspace number $ws3
    bindsym $mod+4 workspace number $ws4
    bindsym $mod+5 workspace number $ws5
    bindsym $mod+6 workspace number $ws6
    bindsym $mod+7 workspace number $ws7
    bindsym $mod+8 workspace number $ws8
    bindsym $mod+9 workspace number $ws9
    bindsym $mod+0 workspace number $ws10

    # Switch to previous or next workspace
	bindsym $mod+Ctrl+Left	workspace prev
	bindsym $mod+Ctrl+Right workspace next
    
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $ws1
    bindsym $mod+Shift+2 move container to workspace number $ws2
    bindsym $mod+Shift+3 move container to workspace number $ws3
    bindsym $mod+Shift+4 move container to workspace number $ws4
    bindsym $mod+Shift+5 move container to workspace number $ws5
    bindsym $mod+Shift+6 move container to workspace number $ws6
    bindsym $mod+Shift+7 move container to workspace number $ws7
    bindsym $mod+Shift+8 move container to workspace number $ws8
    bindsym $mod+Shift+9 move container to workspace number $ws9
    bindsym $mod+Shift+0 move container to workspace number $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym $left resize shrink width 10px
        bindsym $down resize grow height 10px
        bindsym $up resize shrink height 10px
        bindsym $right resize grow width 10px

        # Ditto, with arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+r mode "resize"


# 
# Screen capture
#
#
set $mode_screenshot (o)utput, a(r)ea, (w)indow, (a)ctive, (s)creen
#
bindsym Print mode "$mode_screenshot"

set $psf $(xdg-user-dir PICTURES)/ps_$(date +"%Y%m%d%H%M%S").png
 
mode "$mode_screenshot" {
    #bindsym o exec grimshot save output $psf, mode "default" 
    bindsym o exec "grimshot copy output; wl-paste | swappy -f -", mode "default"
    
    #bindsym r exec grimshot save area $psf, mode "default"
    bindsym r exec "grimshot copy area; wl-paste | swappy -f -", mode "default"

    #bindsym w exec grimshot save window $psf, mode "default"
    bindsym w exec "grimshot copy window; wl-paste | swappy -f -", mode "default"

    #bindsym a exec grimshot save active $psf, mode "default"
    bindsym a exec "grimshot copy active; wl-paste | swappy -f -", mode "default"

    #bindsym s exec grimshot save screen $psf, mode "default"
    bindsym s exec "grimshot copy screen; wl-paste | swappy -f -", mode "default"

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#bindsym --release Print exec --no-startup-id flameshot gui

#
# Gaps
#
    smart_gaps off
    smart_borders off
    gaps inner 0 
    gaps outer 0

#
# Brightness
#
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set +5%
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-

#
# Multimedia
#
    bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +2% 
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -2%
    bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle 
    bindsym --locked XF86AudioPlay exec playerctl play-pause
    bindsym --locked XF86AudioNext exec playerctl next
    bindsym --locked XF86AudioPrev exec playerctl previous
    bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle # mute mic
    #bindsym $mod+c exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle # mute mic
    
#
# Status Bar:
#
    # Read `man 5 sway-bar` for more information about this section.
    bar {
        swaybar_command waybar
    }

#
# Colours and titles
#
    default_floating_border normal
    default_border normal
    title_align left
    
    set $primary_color #525252 
    set $secondary_color #373737
    set $alt_color #373737
    set $text_color #fafafa
    set $alt_text_color #a0a0a0
    set $alert_color #6f0019 
    set $indicator_color #fafafa

    # Window color settings
    # class                 border           background       text            indicator
    client.focused          $primary_color   $primary_color   $text_color     $indicator_color
    client.unfocused        $secondary_color $secondary_color $alt_text_color $secondary_color
    client.focused_inactive $alt_color       $alt_color       $alt_text_color $alt_color
    client.placeholder      $alt_color       $alt_color       $alt_text_color $alt_color
    client.urgent           $alert_color     $alert_color     $text_color     $alert_color

    client.background       $primary_color

#
# Assigns
# swaymsg -t get_tree | grep -E "app_id|class"
    assign [app_id="foot"] $ws1
    assign [app_id="firefox"] $ws2
    assign [app_id="org.qutebrowser.qutebrowser"] $ws2
    assign [class="Brave-browser"] $ws2
    assign [app_id="org.gnome.Nautilus"] $ws3
    assign [app_id="org.kde.dolphin"] $ws3
    assign [app_id="texstudio"] $ws4
    assign [app_id="libreoffice-startcenter"] $ws4
    assign [class="Code"] $ws5
    assign [class="jetbrains-idea-ce"] $ws5
    assign [class="jetbrains-studio"] $ws5
    assign [app_id="evince"] $ws6
    assign [app_id="org.kde.okular"] $ws6
    assign [app_id="qBittorrent"] $ws7
    assign [app_id="Qemu-system-x86_64"] $ws8
    assign [class="TelegramDesktop"] $ws9
    assign [class="discord"] $ws9
    assign [app_id="evolution"] $ws9
    assign [app_id="vlc"] $ws9
    assign [class="Spotify"] $ws10

#
# Custom shortcuts
#
    bindsym $mod+F1 exec $term -e htop
    bindsym $mod+F2 exec firefox
    bindsym $mod+Shift+F2 exec brave
    bindsym $mod+F3 exec dolphin
    bindsym $mod+F4 exec texstudio
    bindsym $mod+F5 exec code
    bindsym $mod+Shift+F5 exec idea-ce
    bindsym $mod+F8 exec virtualbox
    bindsym $mod+F10 exec spotify

#
# Fixes for some apps
#
	for_window [window_role="pop-up"] floating enable
    for_window [window_role="bubble"] floating enable
    for_window [window_role="task_dialog"] floating enable
    for_window [window_role="Preferences"] floating enable
    for_window [window_role="About"] floating enable	
    
    for_window [window_type="dialog"] floating enable
    for_window [window_type="menu"] floating enable
    for_window [window_type="popup_menu"] floating enable
    for_window [window_type="tooltip"] floating enable
    for_window [window_type="splash"] floating enable
    for_window [window_type="notification"] floating enable
    for_window [class="Spotify"] move to workspace number $ws10
    for_window [app_id="flameshot"] floating enable, fullscreen disable, move absolute position 0 0, border pixel 0
    for_window [app_id="ulauncher"] floating enable, border none 
    #for_window [title="Ulauncher - Application Launcher"] floating enable, border none 
#
# Execs
#
    # Screen colour temperature
    exec --no-startup-id gammastep -c ~/.config/gammastep/gammastep.conf

    # Foot server
    exec --no-startup-id foot --server

    # Autotiling
    exec --no-startup-id autotiling

    # Wallpaper
    exec ~/.azotebg
    #exec --no-startup-id swaybg -c '#113344' -o 'HDMI-A-1'

    # Notifications
    #exec --no-startup-id mako
    exec swaync

    bindsym $mod+Shift+n exec swaync-client -t -sw

    # Screenshot tool
    #exec --no-startup-id flameshot
    
    # Cliphist
    exec --no-startup-id wl-paste --watch cliphist store
    
    # Polkit
    exec --no-startup-id "/usr/lib/polkit-kde-authentication-agent-1"

    # Easy effects
    exec --no-startup-id easyeffects --gapplication-service

    # Default applications
    exec --no-startup-id kbuildsycoca6
#
# Includes
#
include /etc/sway/config.d/*
